<K> public/*package*/ open class NoSamForClassTypeParameter : R|java/lang/Object| {
    public/*package*/ open operator function foo(runnable1: R|ft<K, K?>|!, runnable2: R|ft<java/lang/Runnable, java/lang/Runnable?>|!): R|kotlin/Unit|

}
public/*package*/ open class NoSamForTypeParameterDerived1 : R|test/NoSamForClassTypeParameter<java/lang/Runnable>| {
    @R|java/lang/Override|() public/*package*/ open operator function foo(runnable1: R|ft<java/lang/Runnable, java/lang/Runnable?>|!, runnable2: R|ft<java/lang/Runnable, java/lang/Runnable?>|!): R|kotlin/Unit|

}
<E> public/*package*/ open class NoSamForTypeParameterDerived2 : R|test/NoSamForClassTypeParameter<E>| {
    public/*package*/ open operator function foo(runnable1: R|ft<E, E?>|!, runnable2: R|ft<java/lang/Runnable, java/lang/Runnable?>|!): R|kotlin/Unit|

}
public/*package*/ open class NoSamForTypeParameterDerived3 : R|test/NoSamForTypeParameterDerived1| {
    @R|java/lang/Override|() public/*package*/ open operator function foo(runnable1: R|ft<java/lang/Runnable, java/lang/Runnable?>|!, runnable2: R|ft<java/lang/Runnable, java/lang/Runnable?>|!): R|kotlin/Unit|

}
public/*package*/ open class NoSamForTypeParameterDerived4 : R|test/NoSamForTypeParameterDerived2<java/lang/Runnable>| {
    @R|java/lang/Override|() public/*package*/ open operator function foo(runnable1: R|ft<java/lang/Runnable, java/lang/Runnable?>|!, runnable2: R|ft<java/lang/Runnable, java/lang/Runnable?>|!): R|kotlin/Unit|

}
